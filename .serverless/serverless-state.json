{
  "service": {
    "service": "ez-stack-authentication",
    "serviceObject": {
      "name": "ez-stack-authentication"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "region": "us-east-1",
      "environment": {
        "USER_POOL_ID": [
          {
            "Ref": "CognitoUserPool"
          }
        ],
        "SES_FROM_ADDRESS": "no-reply@ayusha.net"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "ses:SendEmail"
          ],
          "Resource": "*"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AuthorizerUnderscoreonlineLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ez-stack-authentication-dev-authorizer_online"
            }
          },
          "PreSignUpLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ez-stack-authentication-dev-preSignUp"
            }
          },
          "DefineAuthChallengeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ez-stack-authentication-dev-defineAuthChallenge"
            }
          },
          "CreateAuthChallengeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ez-stack-authentication-dev-createAuthChallenge"
            }
          },
          "VerifyAuthChallengeResponseLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ez-stack-authentication-dev-verifyAuthChallengeResponse"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "ez-stack-authentication",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ez-stack-authentication-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ez-stack-authentication-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ez-stack-authentication",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AuthorizerUnderscoreonlineLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ez-stack-authentication/dev/1663092656414-2022-09-13T18:10:56.414Z/authorizer_online.zip"
              },
              "Handler": "lambdas/authorizer/online.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "ez-stack-authentication-dev-authorizer_online",
              "MemorySize": 1024,
              "Timeout": 6,
              "Description": "security authorizer for online cognito access token check",
              "Environment": {
                "Variables": {
                  "USER_POOL_ID": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL_ID\"]"
                  },
                  "SES_FROM_ADDRESS": "no-reply@ayusha.net"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuthorizerUnderscoreonlineLogGroup"
            ]
          },
          "PreSignUpLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ez-stack-authentication/dev/1663092656414-2022-09-13T18:10:56.414Z/preSignUp.zip"
              },
              "Handler": "lambdas/cognito/pre-signup.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "ez-stack-authentication-dev-preSignUp",
              "MemorySize": 1024,
              "Timeout": 6,
              "Description": "COGNITO - auto confirm user before signup",
              "Environment": {
                "Variables": {
                  "USER_POOL_ID": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL_ID\"]"
                  },
                  "SES_FROM_ADDRESS": "no-reply@ayusha.net"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PreSignUpLogGroup"
            ]
          },
          "DefineAuthChallengeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ez-stack-authentication/dev/1663092656414-2022-09-13T18:10:56.414Z/defineAuthChallenge.zip"
              },
              "Handler": "lambdas/cognito/define-auth-challenge.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "ez-stack-authentication-dev-defineAuthChallenge",
              "MemorySize": 1024,
              "Timeout": 6,
              "Description": "COGNITO - manage flow of custom auth",
              "Environment": {
                "Variables": {
                  "USER_POOL_ID": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL_ID\"]"
                  },
                  "SES_FROM_ADDRESS": "no-reply@ayusha.net"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DefineAuthChallengeLogGroup"
            ]
          },
          "CreateAuthChallengeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ez-stack-authentication/dev/1663092656414-2022-09-13T18:10:56.414Z/createAuthChallenge.zip"
              },
              "Handler": "lambdas/cognito/create-auth-challenge.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "ez-stack-authentication-dev-createAuthChallenge",
              "MemorySize": 1024,
              "Timeout": 6,
              "Description": "COGNITO - create and email unique OTP",
              "Environment": {
                "Variables": {
                  "USER_POOL_ID": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL_ID\"]"
                  },
                  "SES_FROM_ADDRESS": "no-reply@ayusha.net"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateAuthChallengeLogGroup"
            ]
          },
          "VerifyAuthChallengeResponseLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ez-stack-authentication/dev/1663092656414-2022-09-13T18:10:56.414Z/verifyAuthChallengeResponse.zip"
              },
              "Handler": "lambdas/cognito/verify-auth-challenge-response.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "ez-stack-authentication-dev-verifyAuthChallengeResponse",
              "MemorySize": 1024,
              "Timeout": 6,
              "Description": "COGNITO - check if user entered correct OTP",
              "Environment": {
                "Variables": {
                  "USER_POOL_ID": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL_ID\"]"
                  },
                  "SES_FROM_ADDRESS": "no-reply@ayusha.net"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "VerifyAuthChallengeResponseLogGroup"
            ]
          },
          "AuthorizerUnderscoreonlineLambdaVersion3neFXqOcmTgQXU1VF80y2t1WCYU8bebXc8wZXkWMSjc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthorizerUnderscoreonlineLambdaFunction"
              },
              "CodeSha256": "F85kJApHK5rm/DiXM+igVaW4gCH6CX3kC+fSYWHHdJU=",
              "Description": "security authorizer for online cognito access token check"
            }
          },
          "PreSignUpLambdaVersionKNnjwnKUjceQVNYPvcx8pi4f4wZxA0bPIjHbFUZrQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PreSignUpLambdaFunction"
              },
              "CodeSha256": "ruYTqMhMGSDSVSZet0RbxqvcebxC0HYCXRRBpqZpF94=",
              "Description": "COGNITO - auto confirm user before signup"
            }
          },
          "DefineAuthChallengeLambdaVersionrq0tX7Pj7pbayYUjdMTl8ZxbXbCCSoHvkbaGCPK1Gk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DefineAuthChallengeLambdaFunction"
              },
              "CodeSha256": "ruYTqMhMGSDSVSZet0RbxqvcebxC0HYCXRRBpqZpF94=",
              "Description": "COGNITO - manage flow of custom auth"
            }
          },
          "CreateAuthChallengeLambdaVersionBK6TycLJlSwZZHTMTCR6l7yiMsj18QLA0njjUdK49ww": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateAuthChallengeLambdaFunction"
              },
              "CodeSha256": "ruYTqMhMGSDSVSZet0RbxqvcebxC0HYCXRRBpqZpF94=",
              "Description": "COGNITO - create and email unique OTP"
            }
          },
          "VerifyAuthChallengeResponseLambdaVersion0FuuwzklWbSgKQkat8uwCGEKLFarq7pjgw5us37SqA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "VerifyAuthChallengeResponseLambdaFunction"
              },
              "CodeSha256": "ruYTqMhMGSDSVSZet0RbxqvcebxC0HYCXRRBpqZpF94=",
              "Description": "COGNITO - check if user entered correct OTP"
            }
          },
          "CognitoUserPoolEzstackuserpool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "ez-stack-user-pool",
              "LambdaConfig": {
                "PreSignUp": {
                  "Fn::GetAtt": [
                    "PreSignUpLambdaFunction",
                    "Arn"
                  ]
                },
                "DefineAuthChallenge": {
                  "Fn::GetAtt": [
                    "DefineAuthChallengeLambdaFunction",
                    "Arn"
                  ]
                },
                "CreateAuthChallenge": {
                  "Fn::GetAtt": [
                    "CreateAuthChallengeLambdaFunction",
                    "Arn"
                  ]
                },
                "VerifyAuthChallengeResponse": {
                  "Fn::GetAtt": [
                    "VerifyAuthChallengeResponseLambdaFunction",
                    "Arn"
                  ]
                }
              }
            },
            "DependsOn": [
              "PreSignUpLambdaFunction",
              "DefineAuthChallengeLambdaFunction",
              "CreateAuthChallengeLambdaFunction",
              "VerifyAuthChallengeResponseLambdaFunction"
            ]
          },
          "PreSignUpLambdaPermissionCognitoUserPoolEzstackuserpoolTriggerSourcePreSignUp": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PreSignUpLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolEzstackuserpool",
                  "Arn"
                ]
              }
            }
          },
          "DefineAuthChallengeLambdaPermissionCognitoUserPoolEzstackuserpoolTriggerSourceDefineAuthChallenge": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DefineAuthChallengeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolEzstackuserpool",
                  "Arn"
                ]
              }
            }
          },
          "CreateAuthChallengeLambdaPermissionCognitoUserPoolEzstackuserpoolTriggerSourceCreateAuthChallenge": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateAuthChallengeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolEzstackuserpool",
                  "Arn"
                ]
              }
            }
          },
          "VerifyAuthChallengeResponseLambdaPermissionCognitoUserPoolEzstackuserpoolTriggerSourceVerifyAuthChallengeResponse": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "VerifyAuthChallengeResponseLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolEzstackuserpool",
                  "Arn"
                ]
              }
            }
          },
          "CognitoUserPoolEzStack": {
            "Type": "AWS::Cognito::UserPool",
            "DeletionPolicy": "Retain",
            "Properties": {
              "UserPoolName": "ez-stack-user-pool",
              "UsernameAttributes": [
                "email"
              ],
              "EmailConfiguration": {
                "EmailSendingAccount": "DEVELOPER",
                "From": "no-reply@ayusha.net",
                "SourceArn": "arn:aws:ses:us-east-1:941536852168:identity/ayusha.net"
              }
            }
          },
          "CognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "DeletionPolicy": "Retain",
            "Properties": {
              "ClientName": "user-pool-client-web",
              "SupportedIdentityProviders": [
                "COGNITO"
              ],
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ExplicitAuthFlows": [
                "ALLOW_CUSTOM_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "GenerateSecret": false
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-ez-stack-authentication-dev-ServerlessDeploymentBucketName"
            }
          },
          "AuthorizerUnderscoreonlineLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthorizerUnderscoreonlineLambdaVersion3neFXqOcmTgQXU1VF80y2t1WCYU8bebXc8wZXkWMSjc"
            },
            "Export": {
              "Name": "sls-ez-stack-authentication-dev-AuthorizerUnderscoreonlineLambdaFunctionQualifiedArn"
            }
          },
          "PreSignUpLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PreSignUpLambdaVersionKNnjwnKUjceQVNYPvcx8pi4f4wZxA0bPIjHbFUZrQ"
            },
            "Export": {
              "Name": "sls-ez-stack-authentication-dev-PreSignUpLambdaFunctionQualifiedArn"
            }
          },
          "DefineAuthChallengeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DefineAuthChallengeLambdaVersionrq0tX7Pj7pbayYUjdMTl8ZxbXbCCSoHvkbaGCPK1Gk"
            },
            "Export": {
              "Name": "sls-ez-stack-authentication-dev-DefineAuthChallengeLambdaFunctionQualifiedArn"
            }
          },
          "CreateAuthChallengeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateAuthChallengeLambdaVersionBK6TycLJlSwZZHTMTCR6l7yiMsj18QLA0njjUdK49ww"
            },
            "Export": {
              "Name": "sls-ez-stack-authentication-dev-CreateAuthChallengeLambdaFunctionQualifiedArn"
            }
          },
          "VerifyAuthChallengeResponseLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "VerifyAuthChallengeResponseLambdaVersion0FuuwzklWbSgKQkat8uwCGEKLFarq7pjgw5us37SqA"
            },
            "Export": {
              "Name": "sls-ez-stack-authentication-dev-VerifyAuthChallengeResponseLambdaFunctionQualifiedArn"
            }
          },
          "UserPoolId": {
            "Value": {
              "Ref": "CognitoUserPool"
            },
            "Export": {
              "Name": "UserPoolId"
            }
          },
          "UserPoolClientId": {
            "Value": {
              "Ref": "CognitoUserPoolClient"
            }
          }
        },
        "Parameters": {
          "CognitoUserPool": {
            "Type": "String",
            "Default": "us-east-1_nMl2Znmzc"
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "authorizer_online": {
        "handler": "lambdas/authorizer/online.handler",
        "description": "security authorizer for online cognito access token check",
        "package": {
          "include": [
            "lambdas/authorizer/online.js"
          ],
          "artifact": "/Users/ayushaupreti/workspace/ez-stack/ez-stack-authentication/.serverless/authorizer_online.zip"
        },
        "events": [],
        "name": "ez-stack-authentication-dev-authorizer_online",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "AuthorizerUnderscoreonlineLambdaVersion3neFXqOcmTgQXU1VF80y2t1WCYU8bebXc8wZXkWMSjc"
      },
      "preSignUp": {
        "handler": "lambdas/cognito/pre-signup.handler",
        "description": "COGNITO - auto confirm user before signup",
        "events": [
          {
            "cognitoUserPool": {
              "pool": "ez-stack-user-pool",
              "trigger": "PreSignUp"
            }
          }
        ],
        "name": "ez-stack-authentication-dev-preSignUp",
        "package": {
          "artifact": "/Users/ayushaupreti/workspace/ez-stack/ez-stack-authentication/.serverless/preSignUp.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "PreSignUpLambdaVersionKNnjwnKUjceQVNYPvcx8pi4f4wZxA0bPIjHbFUZrQ"
      },
      "defineAuthChallenge": {
        "handler": "lambdas/cognito/define-auth-challenge.main",
        "description": "COGNITO - manage flow of custom auth",
        "events": [
          {
            "cognitoUserPool": {
              "pool": "ez-stack-user-pool",
              "trigger": "DefineAuthChallenge"
            }
          }
        ],
        "name": "ez-stack-authentication-dev-defineAuthChallenge",
        "package": {
          "artifact": "/Users/ayushaupreti/workspace/ez-stack/ez-stack-authentication/.serverless/defineAuthChallenge.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "DefineAuthChallengeLambdaVersionrq0tX7Pj7pbayYUjdMTl8ZxbXbCCSoHvkbaGCPK1Gk"
      },
      "createAuthChallenge": {
        "handler": "lambdas/cognito/create-auth-challenge.main",
        "description": "COGNITO - create and email unique OTP",
        "events": [
          {
            "cognitoUserPool": {
              "pool": "ez-stack-user-pool",
              "trigger": "CreateAuthChallenge"
            }
          }
        ],
        "name": "ez-stack-authentication-dev-createAuthChallenge",
        "package": {
          "artifact": "/Users/ayushaupreti/workspace/ez-stack/ez-stack-authentication/.serverless/createAuthChallenge.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "CreateAuthChallengeLambdaVersionBK6TycLJlSwZZHTMTCR6l7yiMsj18QLA0njjUdK49ww"
      },
      "verifyAuthChallengeResponse": {
        "handler": "lambdas/cognito/verify-auth-challenge-response.main",
        "description": "COGNITO - check if user entered correct OTP",
        "events": [
          {
            "cognitoUserPool": {
              "pool": "ez-stack-user-pool",
              "trigger": "VerifyAuthChallengeResponse"
            }
          }
        ],
        "name": "ez-stack-authentication-dev-verifyAuthChallengeResponse",
        "package": {
          "artifact": "/Users/ayushaupreti/workspace/ez-stack/ez-stack-authentication/.serverless/verifyAuthChallengeResponse.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "VerifyAuthChallengeResponseLambdaVersion0FuuwzklWbSgKQkat8uwCGEKLFarq7pjgw5us37SqA"
      }
    },
    "resources": {
      "Parameters": {
        "CognitoUserPool": {
          "Type": "String",
          "Default": "us-east-1_nMl2Znmzc"
        }
      },
      "Resources": {
        "CognitoUserPoolEzStack": {
          "Type": "AWS::Cognito::UserPool",
          "DeletionPolicy": "Retain",
          "Properties": {
            "UserPoolName": "ez-stack-user-pool",
            "UsernameAttributes": [
              "email"
            ],
            "EmailConfiguration": {
              "EmailSendingAccount": "DEVELOPER",
              "From": "no-reply@ayusha.net",
              "SourceArn": "arn:aws:ses:us-east-1:941536852168:identity/ayusha.net"
            }
          }
        },
        "CognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "DeletionPolicy": "Retain",
          "Properties": {
            "ClientName": "user-pool-client-web",
            "SupportedIdentityProviders": [
              "COGNITO"
            ],
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "ExplicitAuthFlows": [
              "ALLOW_CUSTOM_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH"
            ],
            "GenerateSecret": false
          }
        }
      },
      "Outputs": {
        "UserPoolId": {
          "Value": {
            "Ref": "CognitoUserPool"
          },
          "Export": {
            "Name": "UserPoolId"
          }
        },
        "UserPoolClientId": {
          "Value": {
            "Ref": "CognitoUserPoolClient"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "ez-stack-authentication",
      "frameworkVersion": "3",
      "package": {
        "individually": true,
        "exclude": [
          "readme.md",
          ".gitignore",
          "lambdas/**"
        ],
        "artifactsS3KeyDirname": "serverless/ez-stack-authentication/dev/code-artifacts",
        "artifactDirectoryName": "serverless/ez-stack-authentication/dev/1663092656414-2022-09-13T18:10:56.414Z"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/ez-stack-authentication/dev/1663092656414-2022-09-13T18:10:56.414Z",
    "artifact": ""
  }
}